{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","power","switch","soundName","changeName","bind","assertThisInitialized","switchBank","powerSwitch","name","setState","replace","_this2","DrumPads","map","a","react_default","createElement","App_Drums","bank","letters","newName","id","App_Functionality","React","Component","Functionality","onClasses","onClick","className","Drums","_this3","handleKey","playSound","sound","document","getElementById","Bank","currentTime","play","e","keyCode","kCode","addEventListener","removeEventListener","bankTwo","bankOne","src","url","Q","W","E","A","S","D","Z","X","C","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09a31c90.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      power: true,\n      switch: false,\n      soundName: ' '\n    }\n    this.changeName = this.changeName.bind(this);\n    this.switchBank = this.switchBank.bind(this);\n    this.powerSwitch = this.powerSwitch.bind(this);\n  }\n  changeName(name){\n    this.setState({\n      soundName: name.replace(/-/g,' ')\n    });\n  }\n  switchBank(){\n    if(this.state.power){\n       this.setState({\n        switch: !this.state.switch\n      });\n    }\n  }\n  powerSwitch(){\n    this.setState({\n      power: !this.state.power,\n      soundName: ' '\n    });\n  }\n  render(){\n    let arr = ['Q','W','E','A','S','D','Z','X','C'];\n    let DrumPads = arr.map((a) => <Drums bank={this.state.switch} letters={a} newName={this.changeName} power={this.state.power}/>);\n    return (\n             <div id='drum-machine'>\n               <div id=\"drums\">{DrumPads}</div>\n               <Functionality name={this.state.soundName} \n                 bank={this.state.switch}\n                 switch={this.switchBank}\n                 power={this.state.power}\n                 powerSwitch={this.powerSwitch} />\n             </div>\n    );\n  }\n}\n\nconst Functionality = (props) => {\n  let onClasses = props.power? ['displayOn', 'lightOn','On']: ['displayOff', 'lightOff','Off'];\n  let bank = props.bank ? 'bank2': 'bank1';\n  return (\n    <div id=\"functionality\">\n      <p id={onClasses[0]}>{props.name}</p>\n      <div id=\"bank\" onClick={props.switch}>\n        <span>Bank Switch</span>\n        <div id=\"bank-switch\">\n          <div id={bank}></div>\n        </div>\n      </div>\n      <div id=\"power\" onClick={props.powerSwitch}>{onClasses[2]}<div className={onClasses[1]}></div></div>\n    </div>\n  );\n}\n\nclass Drums extends React.Component{\n  constructor(props){\n    super(props);\n    this.handleKey = this.handleKey.bind(this);\n    this.playSound = this.playSound.bind(this);\n  } \n  playSound(){\n    if(this.props.power){\n      let sound = document.getElementById(this.props.letters);\n      this.props.newName(this.Bank[this.props.letters].id);\n      sound.currentTime = 0;\n      sound.play();\n    }\n  }\n  handleKey(e){\n    if(e.keyCode === this.Bank[this.props.letters].kCode){\n      this.playSound();\n    }\n  }\n  componentDidMount(){\n    document.addEventListener('keydown', this.handleKey);\n  }\n  componentWillUnmount(){\n    document.removeEventListener('keydown', this.handleKey);\n  }\n  render(){\n    let onClasses = this.props.power? 'drum-padOn': 'drum-padOff';\n    this.Bank = this.props.bank? bankTwo: bankOne; \n    return(\n      <div className={onClasses} onClick={this.playSound} id={this.Bank[this.props.letters].id}>\n        <div className=\"light\"></div>\n        <p>{this.props.letters}</p>\n        <audio src={this.Bank[this.props.letters].url} className=\"clip\"  id={this.props.letters}></audio>\n      </div>\n    );\n  } \n}\n\n\nconst bankOne = {\n  'Q':{ kCode: 81, id: 'Heater-1', url:'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'},\n  'W':{ kCode: 87, id: 'Heater-2', url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'},\n  'E':{ kCode: 69, id: 'Heater-3', url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'},\n  'A':{ kCode: 65, id: 'Heater-4', url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'},\n  'S':{ kCode: 83, id: 'Clap', url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'},\n  'D':{ kCode: 68, id: 'Open-HH', url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'},\n  'Z':{ kCode: 90, id: \"Kick-n'-Hat\", url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'},\n  'X':{ kCode: 88, id: 'Kick', url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'},\n  'C':{ kCode: 67, id: 'Closed-HH', url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'}\n  };\n\nconst bankTwo = {\n  'Q':{ kCode: 81, id: 'Chord-1', url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'},\n  'W':{ kCode: 87, id: 'Chord-2', url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'},\n  'E':{ kCode: 69, id: 'Chord-3', url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'},\n  'A':{ kCode: 65, id: 'Shaker', url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'},\n  'S':{ kCode: 83, id: 'Open-HH', url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'},\n  'D':{ kCode: 68, id: 'Closed-HH', url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'},\n  'Z':{ kCode: 90, id: 'Punchy-Kick', url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'},\n  'X':{ kCode: 88, id: 'Side-Stick', url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'},\n  'C':{ kCode: 67, id: 'Snare', url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'}\n  };\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}